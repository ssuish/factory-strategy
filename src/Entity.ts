import { IComponent } from "./Components";

export class Entity {
  private components: Map<string, IComponent> = new Map();
  private id: string;

  // ID should be autogenerated and
  constructor(id: string) {
    this.id = id;
  }

  getId(): string {
    return this.id;
  }

  addComponent(key: string, component: IComponent): void {
    if (this.components.has(key)) {
      throw new Error(`Component with key '${key}' already exists.`);
    }
    this.components.set(key, component);
  }

  getComponentKeys(): string[] {
    return Array.from(this.components.keys());
  }

  getComponent<T extends IComponent>(key: string): T | undefined {
    return this.components.get(key) as T | undefined;
  }

  update(deltaTime: number): void {
    this.components.forEach((component) => {
      component.update(deltaTime);
    });
  }

  removeComponent(key: string): void {
    this.components.delete(key);
  }
}
